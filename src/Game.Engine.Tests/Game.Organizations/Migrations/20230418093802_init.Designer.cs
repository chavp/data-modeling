// <auto-generated />
using System;
using Game.Organizations.Models.Mappings;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Game.Organizations.Migrations
{
    [DbContext(typeof(OrganizationContext))]
    [Migration("20230418093802_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("organization")
                .HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("Game.Organizations.Models.Party", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PartyType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Parties", "organization");

                    b.HasDiscriminator<string>("PartyType").HasValue("Party");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Game.Organizations.Models.Stat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Agility")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Experience")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("HP")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Level")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("MP")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PartyId")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Resilience")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Strength")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PartyId");

                    b.ToTable("Stats", "organization");
                });

            modelBuilder.Entity("Game.Organizations.Models.Person", b =>
                {
                    b.HasBaseType("Game.Organizations.Models.Party");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("Person");
                });

            modelBuilder.Entity("Game.Organizations.Models.Team", b =>
                {
                    b.HasBaseType("Game.Organizations.Models.Party");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Parties", "organization", t =>
                        {
                            t.Property("Name")
                                .HasColumnName("Team_Name");
                        });

                    b.HasDiscriminator().HasValue("Team");
                });

            modelBuilder.Entity("Game.Organizations.Models.Stat", b =>
                {
                    b.HasOne("Game.Organizations.Models.Party", "Party")
                        .WithMany()
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Party");
                });
#pragma warning restore 612, 618
        }
    }
}
